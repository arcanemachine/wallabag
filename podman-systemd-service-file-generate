#!/bin/bash

cd $(dirname "$0")

# source dotenv
if [ -f ".env" ]; then
  echo "Importing environment from '.env'..."
  set -o allexport; source .env; set +o allexport
fi

# source local dotenv
if [ -f ".env.override" ]; then
  echo "Importing environment from '.env.override'..."
  set -o allexport; source .env.override; set +o allexport
fi

# use the name of the project directory as the name of the service
service_name=$(basename $(pwd))
service_file="$HOME/systemd/user/$service_name.service"

if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
  echo "This script generates a systemd service file.
The output will be sent here: '$service_file'

In order to start this service on boot, you must enabling lingering for this user:
  - sudo loginctl enable-linger $USER

To enable this service:
  - systemctl --user enable $service_name.service

To start this service:
  - systemctl --user start $service_name.service"
  exit 0
fi

if [ "$DRY_RUN" == 1 ]; then
  output_to=/dev/stdout
else
  output_to=~/.config/systemd/user/${service_name}.service
fi

echo "[Unit]
Description=${service_name}
Wants=network-online.target
After=network-online.target
Requires=podman.service
RequiresMountsFor=/run/user/$(id -u)/containers

[Service]
# Environment=PODMAN_SYSTEMD_UNIT=%n
Environment=COMPOSE_DOCKER_CLI_BUILD=0

Restart=on-failure
WorkingDirectory=$(pwd)

# Shutdown container (if running) when unit is started
ExecStartPre=$(which podman-compose) down

# Start container when unit is started
ExecStart=$(which podman-compose) up --remove-orphans

# Stop all services
ExecStop=$(which podman-compose) down

[Install]
WantedBy=default.target" > ${output_to}

# systemctl --user daemon-reload
# systemctl --user start ${service_name}.service

echo "done"
